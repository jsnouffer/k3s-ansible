- name: Create temporary working directory
  ansible.builtin.tempfile:
    state: directory
  register: working_dir

- name: Git clone chart repo
  ansible.builtin.git:
    repo: https://github.com/jsnouffer/homelab.git
    dest: "{{ working_dir.path }}/repo"

- name: Copy kubeconfig from control-plane node
  shell: scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@{{ groups['master'][0] }}:~/.kube/config {{ working_dir.path }}/kubeconfig

- name: Deploy external-secrets chart initially
  kubernetes.core.helm:
    kubeconfig: "{{ working_dir.path }}/kubeconfig"
    name: external-secrets
    chart_ref: "{{ working_dir.path }}/repo/kubernetes-deployments/core/external-secrets"
    release_namespace: external-secrets
    dependency_update: true
    create_namespace: true
    wait: true
    values:
      external-secrets:
        initialInstall: true

- name: Deploy external-secrets chart with all manifests
  kubernetes.core.helm:
    kubeconfig: "{{ working_dir.path }}/kubeconfig"
    name: external-secrets
    chart_ref: "{{ working_dir.path }}/repo/kubernetes-deployments/core/external-secrets"
    release_namespace: external-secrets
    wait: true
    values:
      external-secrets:
        initialInstall: false

- name: Deploy argocd chart initially
  kubernetes.core.helm:
    kubeconfig: "{{ working_dir.path }}/kubeconfig"
    name: argocd
    chart_ref: "{{ working_dir.path }}/repo/kubernetes-deployments/core/argocd"
    release_namespace: argocd
    dependency_update: true
    create_namespace: true
    wait: true
    values:
      argocd-apps:
        enabled: false

- name: Deploy argocd chart with all manifests
  kubernetes.core.helm:
    kubeconfig: "{{ working_dir.path }}/kubeconfig"
    name: argocd
    chart_ref: "{{ working_dir.path }}/repo/kubernetes-deployments/core/argocd"
    release_namespace: argocd
    wait: true
    values:
      argocd-apps:
        enabled: true

- name: Remove temporary working directory
  ansible.builtin.file:
    path: "{{ working_dir.path }}"
    state: absent
  when: working_dir.path is defined
